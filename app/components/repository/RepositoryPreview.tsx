'use client'

import React from 'react'
import type { Repository, RepositoryPreviewProps } from '@/types'
import { GlobeAltIcon, LockClosedIcon, ClockIcon, UserIcon, CodeBracketIcon } from '@heroicons/react/24/outline'
import { CONFIG } from '@/lib/config'
import { useLatestCommit } from '@/hooks/useRepositoryCommits'
import { useRepositoryDetails } from '@/hooks/useRepositoryDetails'


export function RepositoryPreview({ repository }: RepositoryPreviewProps) {
  // Use shared hooks for real data instead of mock data
  const { latestCommit, isLoading: isLoadingCommit } = useLatestCommit(repository)
  const { details, isLoading: isLoadingDetails, error, isGitHubAvailable } = useRepositoryDetails(repository)

  const isLoading = isLoadingDetails
  const hasGitHubData = isGitHubAvailable && repository.fullName && repository.fullName.includes('/')

  // Generate fallback README for non-GitHub repositories or when GitHub API fails
  const generateFallbackReadme = (repo: Repository): string => {
    return `# ${repo.name}

${repo.description || 'A project generated by the scaffolding system.'}

## Overview

This repository contains${repo.isScaffoldedProject ? ' a scaffolded project created using our AI-powered' : ' a'} development environment.

## Features

- Modern development setup
- TypeScript configuration
- Automated testing
- CI/CD pipeline

## Getting Started

\`\`\`bash
git clone ${repo.url}
cd ${repo.name}
npm install
npm run dev
\`\`\`

## Contributing

Please read our contributing guidelines before making any changes.

## License

This project is licensed under the MIT License.
`
  }

  const formatFileSize = (bytes: number): string => {
    if (bytes === 0) return '0 Bytes'
    const k = CONFIG.LIMITS.FILE_SIZE_DISPLAY_UNIT
    const sizes = ['Bytes', 'KB', 'MB', 'GB']
    const i = Math.floor(Math.log(bytes) / Math.log(k))
    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i]
  }

  const formatDate = (dateString: string) => {
    return new Date(dateString).toLocaleDateString('en-US', {
      year: 'numeric',
      month: 'long',
      day: 'numeric'
    })
  }

  if (isLoading) {
    return (
      <div className="min-h-[400px] flex items-center justify-center">
        <div className="text-center space-y-3">
          <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-500 mx-auto"></div>
          <p className="text-gray-600">
            {hasGitHubData ? 'Loading repository details from GitHub...' : 'Loading repository details...'}
          </p>
        </div>
      </div>
    )
  }

  if (error && !hasGitHubData) {
    return (
      <div className="min-h-[400px] flex items-center justify-center">
        <div className="text-center space-y-3">
          <div className="w-12 h-12 bg-red-100 rounded-full flex items-center justify-center mx-auto">
            <span className="text-xl">❌</span>
          </div>
          <div>
            <p className="text-red-600 font-medium">Failed to load repository</p>
            <p className="text-red-500 text-sm">{error}</p>
          </div>
        </div>
      </div>
    )
  }

  return (
    <div className="space-y-6 h-full overflow-y-auto">
      {/* Repository Header */}
      <div className="border-b border-gray-200 pb-4">
        <div className="flex items-start justify-between">
          <div className="flex-1 min-w-0">
            <div className="flex items-center space-x-2 mb-2">
              <h3 className="text-xl font-semibold text-gray-900 truncate">
                {repository.name}
              </h3>
              {repository.private ? (
                <LockClosedIcon className="w-5 h-5 text-gray-400" />
              ) : (
                <GlobeAltIcon className="w-5 h-5 text-gray-400" />
              )}
              {repository.isScaffoldedProject && (
                <span className="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
                  Scaffolded
                </span>
              )}
            </div>

            {repository.description && (
              <p className="text-gray-600 mb-3">{repository.description}</p>
            )}

            <div className="flex flex-wrap items-center gap-4 text-sm text-gray-500">
              <div className="flex items-center space-x-1">
                <ClockIcon className="w-4 h-4" />
                <span>Updated {formatDate(repository.updatedAt)}</span>
              </div>
              {details?.size && (
                <div className="flex items-center space-x-1">
                  <CodeBracketIcon className="w-4 h-4" />
                  <span>{formatFileSize(details.size * CONFIG.LIMITS.FILE_SIZE_DISPLAY_UNIT)}</span>
                </div>
              )}
            </div>
          </div>

          <a
            href={repository.url}
            target="_blank"
            rel="noopener noreferrer"
            className="ml-4 px-4 py-2 bg-gray-900 text-white rounded-md hover:bg-gray-800 transition-colors text-sm font-medium"
          >
            View on GitHub
          </a>
        </div>
      </div>

      {/* Repository Stats */}
      <div className="grid grid-cols-2 sm:grid-cols-4 gap-4">
        <div className="text-center p-3 bg-gray-50 rounded-lg">
          <div className="text-lg font-semibold text-gray-900">
            {details?.stars !== undefined ? details.stars : '—'}
          </div>
          <div className="text-xs text-gray-500">Stars</div>
        </div>
        <div className="text-center p-3 bg-gray-50 rounded-lg">
          <div className="text-lg font-semibold text-gray-900">
            {details?.forks !== undefined ? details.forks : '—'}
          </div>
          <div className="text-xs text-gray-500">Forks</div>
        </div>
        <div className="text-center p-3 bg-gray-50 rounded-lg">
          <div className="text-lg font-semibold text-gray-900">
            {details?.openIssues !== undefined ? details.openIssues : '—'}
          </div>
          <div className="text-xs text-gray-500">Issues</div>
        </div>
        <div className="text-center p-3 bg-gray-50 rounded-lg">
          <div className="text-lg font-semibold text-gray-900">
            {details?.defaultBranch || 'main'}
          </div>
          <div className="text-xs text-gray-500">Branch</div>
        </div>
      </div>

      {/* GitHub API Status */}
      {hasGitHubData && error && (
        <div className="bg-amber-50 border border-amber-200 rounded-lg p-3">
          <div className="flex items-center gap-2">
            <span className="text-amber-600">⚠️</span>
            <div>
              <p className="text-sm font-medium text-amber-800">GitHub API Unavailable</p>
              <p className="text-xs text-amber-600">
                Showing repository basics only. GitHub token may be missing or have insufficient permissions.
              </p>
            </div>
          </div>
        </div>
      )}

      {/* Languages */}
      {details?.languagesPercentages && Object.keys(details.languagesPercentages).length > 0 ? (
        <div>
          <h4 className="font-medium text-gray-900 mb-2">Languages</h4>
          <div className="space-y-2">
            {Object.entries(details.languagesPercentages).map(([language, percentage]) => (
              <div key={language} className="flex items-center justify-between">
                <span className="text-sm text-gray-600">{language}</span>
                <div className="flex items-center space-x-2">
                  <div className="w-20 bg-gray-200 rounded-full h-2">
                    <div
                      className="bg-blue-500 h-2 rounded-full"
                      style={{ width: `${percentage}%` }}
                    />
                  </div>
                  <span className="text-xs text-gray-500">{percentage}%</span>
                </div>
              </div>
            ))}
          </div>
        </div>
      ) : hasGitHubData && !isLoading ? (
        <div>
          <h4 className="font-medium text-gray-900 mb-2">Languages</h4>
          <p className="text-sm text-gray-500">No language data available from GitHub</p>
        </div>
      ) : null}

      {/* Topics */}
      {details?.topics && details.topics.length > 0 ? (
        <div>
          <h4 className="font-medium text-gray-900 mb-2">Topics</h4>
          <div className="flex flex-wrap gap-2">
            {details.topics.map((topic) => (
              <span
                key={topic}
                className="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800"
              >
                {topic}
              </span>
            ))}
          </div>
        </div>
      ) : repository.isScaffoldedProject ? (
        <div>
          <h4 className="font-medium text-gray-900 mb-2">Topics</h4>
          <div className="flex flex-wrap gap-2">
            {['scaffolded', 'generated', 'web-app'].map((topic) => (
              <span
                key={topic}
                className="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800"
              >
                {topic}
              </span>
            ))}
          </div>
        </div>
      ) : null}

      {/* README Preview */}
      <div>
        <h4 className="font-medium text-gray-900 mb-2">README.md</h4>
        <div className="bg-gray-50 rounded-lg p-3 sm:p-4 text-xs sm:text-sm overflow-hidden">
          {details?.readme ? (
            <pre className="whitespace-pre-wrap font-mono text-gray-700 leading-relaxed break-words overflow-hidden max-w-full">
              {details.readme}
            </pre>
          ) : hasGitHubData && !isLoading ? (
            <div className="text-center py-4">
              <p className="text-gray-500 mb-2">No README found on GitHub</p>
              <details className="text-left">
                <summary className="cursor-pointer text-blue-600 hover:text-blue-800 text-sm">
                  Show fallback README
                </summary>
                <pre className="mt-2 whitespace-pre-wrap font-mono text-gray-600 leading-relaxed text-xs break-words overflow-hidden max-w-full">
                  {generateFallbackReadme(repository)}
                </pre>
              </details>
            </div>
          ) : (
            <pre className="whitespace-pre-wrap font-mono text-gray-700 leading-relaxed break-words overflow-hidden max-w-full">
              {generateFallbackReadme(repository)}
            </pre>
          )}
        </div>
      </div>

      {/* Latest Commit - Using real data from shared hook */}
      <div>
        <h4 className="font-medium text-gray-900 mb-2">Latest Commit</h4>
        {isLoadingCommit ? (
          <div className="bg-gray-50 rounded-lg p-3">
            <div className="flex items-center gap-2 text-gray-600">
              <div className="animate-spin rounded-full h-4 w-4 border-b-2 border-gray-400"></div>
              <span className="text-sm">Loading commit history...</span>
            </div>
          </div>
        ) : latestCommit ? (
          <div className="bg-amber-50 border border-amber-200 rounded-lg p-3">
            <div className="flex items-start space-x-3">
              <div className="flex-shrink-0">
                <UserIcon className="w-5 h-5 text-amber-600" />
              </div>
              <div className="flex-1 min-w-0 space-y-2">
                {/* Commit Message */}
                <p className="text-xs sm:text-sm font-medium text-amber-900 break-words overflow-hidden">
                  {latestCommit.subject}
                </p>

                {/* Commit SHA */}
                <div className="flex items-start gap-2">
                  <span className="text-xs font-medium text-amber-700 flex-shrink-0 mt-1">SHA:</span>
                  <code className="bg-white px-2 py-1 rounded border text-amber-900 font-mono text-xs break-all overflow-hidden min-w-0 flex-1">
                    {latestCommit.hash.substring(0, 12)}
                  </code>
                </div>

                {/* Author and Date */}
                <p className="text-xs text-amber-600">
                  by {latestCommit.author} on {new Date(latestCommit.timestamp).toLocaleDateString('en-US', {
                    year: 'numeric',
                    month: 'long',
                    day: 'numeric',
                    hour: '2-digit',
                    minute: '2-digit'
                  })}
                </p>
              </div>
            </div>
          </div>
        ) : (
          <div className="bg-gray-50 rounded-lg p-3">
            <p className="text-sm text-gray-600">No commit history available</p>
          </div>
        )}
      </div>
    </div>
  )
}
